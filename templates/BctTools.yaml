AWSTemplateFormatVersion: 2010-09-09

Description: Stack creates roles and permissions needed for BlueChipTek to support your AWS Account.

Parameters:
  AwsAccountLinking:
    Description: Setting to True allows for the BCT to link your AWS to BCT's Master Account
    Type: String
    Default: false

  BctMasterAccountAccountId:
    Description: AWS Account Id of the BCT Master account.
    Type: String
    Default: 555703595940

  BctToolsAccountId:
    Description: AWS Account Id running BCT's tools such as HealthChecks
    Type: String
    Default: 992800822204

  BctToolsExternalId:
    Description: External Id used by the OCMS to access your AWS account
    Type: String


Conditions:
  # Here we want to set the condition ResaleDeploy if the param
  # AwsAccountLinking is set to something other than false.
  #
  # CFN isn't straightforward when wanting to check NOT condition, see
  # https://stackoverflow.com/questions/41106216/negate-a-condition-in-cloudformation-template
  # for more details
  AwsAccountLinkingParam: !Equals [ !Ref AwsAccountLinking, false]
  ResaleDeploy: !Not [Condition: AwsAccountLinkingParam]

Resources:
  BctToolsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BctTools
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref BctToolsAccountId
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref BctToolsExternalId
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/AmazonGuardDutyReadOnlyAccess

  ReadOnlyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: BctToolsReadOnly
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
            - autoscaling:Describe*
            - aws-portal:ViewBilling
            - aws-portal:ViewUsage
            - cloudformation:ListStacks
            - cloudformation:ListStackResources
            - cloudformation:DescribeStacks
            - cloudformation:DescribeStackEvents
            - cloudformation:DescribeStackResources
            - cloudformation:GetTemplate
            - cloudfront:Get*
            - cloudfront:List*
            - cloudtrail:DescribeTrails
            - cloudtrail:ListTags
            - cloudwatch:Describe*
            - cloudwatch:Get*
            - cloudwatch:List*
            - config:Get*
            - config:Describe*
            - config:Deliver*
            - config:List*
            - cur:Describe*
            - dms:Describe*
            - dms:List*
            - dynamodb:DescribeTable
            - dynamodb:List*
            - ec2:Describe*
            - ec2:GetReservedInstancesExchangeQuote
            - ecs:List*
            - ecs:Describe*
            - elasticache:Describe*
            - elasticache:ListTagsForResource
            - elasticbeanstalk:Check*
            - elasticbeanstalk:Describe*
            - elasticbeanstalk:List*
            - elasticbeanstalk:RequestEnvironmentInfo
            - elasticbeanstalk:RetrieveEnvironmentInfo
            - elasticfilesystem:Describe*
            - elasticloadbalancing:Describe*
            - elasticmapreduce:Describe*
            - elasticmapreduce:List*
            - es:List*
            - es:Describe*
            - firehose:ListDeliveryStreams
            - firehose:DescribeDeliveryStream
            - iam:List*
            - iam:Get*
            - iam:GenerateCredentialReport
            - kinesis:Describe*
            - kinesis:List*
            - kms:DescribeKey
            - kms:GetKeyRotationStatus
            - kms:ListKeys
            - lambda:List*
            - logs:Describe*
            - redshift:Describe*
            - route53:Get*
            - route53:List*
            - rds:Describe*
            - rds:ListTagsForResource
            - s3:GetBucketAcl
            - s3:GetBucketLocation
            - s3:GetBucketLogging
            - s3:GetBucketPolicy
            - s3:GetBucketTagging
            - s3:GetBucketVersioning
            - s3:GetBucketWebsite
            - s3:List*
            - sagemaker:Describe*
            - sagemaker:List*
            - sdb:GetAttributes
            - sdb:List*
            - ses:Get*
            - ses:List*
            - sns:Get*
            - sns:List*
            - sqs:GetQueueAttributes
            - sqs:ListQueues
            - storagegateway:List*
            - storagegateway:Describe*
            - workspaces:Describe*
          Resource: "*"
      Roles:
        - !Ref BctToolsRole

  BctMasterAccountRole:
    Type: AWS::IAM::Role
    Condition: ResaleDeploy
    Properties:
      RoleName: BctMasterAccount
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref BctMasterAccountAccountId
            Action:
              - sts:AssumeRole
            Condition:
              Bool:
                "aws:MultiFactorAuthPresent": true
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSSupportAccess

  AcceptAccountLinkRequestPolicy:
    Type: AWS::IAM::Policy
    Condition: ResaleDeploy
    Properties:
      PolicyName: BctAcceptAccountLinkRequest
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - organizations:ListHandshakesForAccount
              - organizations:AcceptHandshake
              - organizations:DeclineHandshake
            Resource: !Sub arn:aws:organizations::${BctMasterAccountAccountId}:handshake/*
      Roles:
        - !Ref BctMasterAccountRole

Outputs:
  BctToolsRoleArn:
    Value: !GetAtt BctToolsRole.Arn

  BctMasterAccountRoleArn:
    Condition: ResaleDeploy
    Value: !GetAtt BctMasterAccountRole.Arn
